<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
    "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<!-- 이 XML의 구조대로 구현될 클래스의 이름 => Impl클래스를 대체한다. -->
<mapper namespace="ProfessorMapper">

	<!-- Beans 클래스의 객체이름(id)과 클래스이름(type)을 명시한다. -->
	<resultMap id="professor" type="study.java.myschool.model.Professor">
		<!-- Beans의 멤버변수(property)이름과 
			대상 테이블의 컬럼(column)을 연결한다. -->
		<result property="profno" column="profno" />
		<result property="name" column="name" />
		<result property="userid" column="userid" />
		<result property="position" column="position" />
		<result property="sal" column="sal" />
		<result property="hiredate" column="hiredate" />
		<result property="comm" column="comm" />
		<result property="deptno" column="deptno" />
	</resultMap>
	
	<select id="selectProfessorList" 
			parameterType="study.java.myschool.model.Professor"  
	 		resultMap="professor">
		<!-- 이 안에서 처리할 SQL문을 명시한다. -->
		SELECT profno, name, userid, position, sal, DATE_FORMAT(hiredate, '%Y-%m-%d') AS hiredate,
		comm, deptno
		FROM professor
		ORDER BY profno ASC
	</select>
	
	<select id="selectProfessorItem" 
	    	parameterType="study.java.myschool.model.Professor" 
	    	resultMap="professor">
		<!-- "#{변수명}" 으로 표시된 곳에 멤버변수가 치환된다. -->
		SELECT profno, name, userid, position, sal, DATE_FORMAT(hiredate, '%Y-%m-%d') AS hiredate,
		comm, deptno 
		FROM professor 
		WHERE profno=#{profno}
	</select>
	
	<insert id="insertProfessorItem" 
	    	parameterType="study.java.myschool.model.Professor" 
	    	useGeneratedKeys="true"
	    	keyProperty="profno">
		<!-- "#{변수명}" 으로 표시된 곳에 Beans의 멤버변수가 치환된다. -->
		INSERT INTO professor (name, userid, position, sal, hiredate, comm, deptno) VALUES (
		#{name}, #{userid}, #{position}, #{sal}, #{hiredate}, #{comm}, #{deptno})
		
	</insert>
	
	<!-- 특정 학과에 소속된 모든 교수를 삭제한다. -->
	<delete id="deleteProfessorItem" 
			parameterType="study.java.myschool.model.Professor" >
		<!-- "#{변수명}" 으로 표시된 곳에 파라미터가 치환된다. -->
		DELETE FROM professor WHERE profno=#{profno};
	</delete>
	
	<!-- 특정 학과에 소속된 모든 교수를 삭제한다. -->
	<!-- <delete id="remove_professor_by_deptno" 
			parameterType="study.java.myschool.model.Professor">
		"#{변수명}" 으로 표시된 곳에 파라미터가 치환된다.
		DELETE FROM professor WHERE deptno=#{deptno};
	</delete> -->
	
	<update id="updateProfessorItem" 
	    	parameterType="study.java.myschool.model.Professor">
		<!-- "#{변수명}" 으로 표시된 곳에 Beans의 멤버변수가 치환된다. -->
		UPDATE professor SET
		name=#{name}, userid=#{userid}, position=#{position}, 
		sal=#{sal}, hiredate=#{hiredate}, comm=#{comm}, deptno=#{deptno}  
		WHERE profno=#{profno};
	</update>

</mapper>
